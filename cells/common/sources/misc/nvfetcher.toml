### look-and-feel
[console-solarized]
src.git = "https://github.com/adeverteuil/console-solarized"
fetch.github = "adeverteuil/console-solarized"

# TODO: https://github.com/lassekongo83/adw-colors
# https://github.com/lassekongo83/adw-gtk3
[themix-gui]
git.fetchSubmodules = true
src.git = "https://github.com/themix-project/themix-gui"
fetch.git = "https://github.com/themix-project/themix-gui"

[haishoku]
src.git = "https://github.com/LanceGin/haishoku"
fetch.git = "https://github.com/LanceGin/haishoku"

[colorz]
src.git = "https://github.com/metakirby5/colorz"
fetch.git = "https://github.com/metakirby5/colorz"

[numix-solarized-gtk-theme-git]
src.git = "https://github.com/Ferdi265/numix-solarized-gtk-theme"
fetch.git = "https://github.com/Ferdi265/numix-solarized-gtk-theme"

# Newer gtk theme for gnome-shell and gtk3+
[solarized-dark-gnome-shell-2020]
src.branch = "Solarized-Dark-gtk-theme-colorpack"
# src.branch = "Solarized-Dark-GNOME-Shell-2020"
src.git = "https://github.com/rtlewis88/rtl88-Themes"
fetch.git = "https://github.com/rtlewis88/rtl88-Themes"

[solarized-material]
src.branch = "Material-Solarized-Complete-Desktop"
src.git = "https://github.com/rtlewis1/GTK"
fetch.git = "https://github.com/rtlewis1/GTK"

[solarized-darkarc]
src.branch = "Solarized-DarkArc-COLORPACK"
src.git = "https://github.com/rtlewis1/GTK"
fetch.git = "https://github.com/rtlewis1/GTK"

[solarized-sddm]
src.git = "https://github.com/MalditoBarbudo/solarized_sddm_theme"
fetch.git = "https://github.com/MalditoBarbudo/solarized_sddm_theme"

[base16-solarized-scheme]
src.git = "https://github.com/mk12/base16-solarized-scheme"
fetch.git = "https://github.com/mk12/base16-solarized-scheme"

[base16-schemes]
src.git = "https://github.com/tinted-theming/schemes"
fetch.git = "https://github.com/tinted-theming/schemes"

[tfenv]
#  Terraform version manager
src.git = "https://github.com/tfutils/tfenv"
fetch.github = "tfutils/tfenv"

[s5cmd]
# Parallel S3 and local filesystem execution tool.
src.git = "https://github.com/peak/s5cmd"
fetch.github = "peak/s5cmd"

[chatgpt-wrapper]
# Power CLI and Workflow manager for LLMs
src.git = "https://github.com/llm-workflow-engine/llm-workflow-engine"
fetch.github = "llm-workflow-engine/llm-workflow-engine"

[langchain]
# Building applications with LLMs through composability
src.github = "langchain-ai/langchain"
src.use_latest_release = true
fetch.github = "langchain-ai/langchain"

# [drawio]
# src.github = "jgraph/drawio-desktop"
# fetch.url = "https://github.com/jgraph/drawio-desktop/releases/download/v$ver/drawio-x86_64-$ver.rpm"
# src.prefix = "v"

[adguard-filters_adguardteam]
src.git = "https://github.com/AdguardTeam/AdguardFilters"
fetch.git = "https://github.com/AdguardTeam/AdguardFilters"

[adguard-filters_romania]
src.git = "https://github.com/tcptomato/ROad-Block"
fetch.git = "https://github.com/tcptomato/ROad-Block"

# [adguardhome]
# src.github = "AdguardTeam/AdGuardHome"
# fetch.url = "https://github.com/AdguardTeam/AdGuardHome/releases/download/$ver/AdGuardHome_linux_amd64.tar.gz"

### :START: ipxe
[ipxe]
src.git = "https://github.com/ipxe/ipxe"
fetch.git = "https://github.com/ipxe/ipxe"
# git.leaveDotGit = true
### :END: ipxe

### :START: promnesia
# [promnesia]
# src.git = "https://github.com/karlicoss/promnesia"
# fetch.github = "karlicoss/promnesia"

# [HPI]
# src.pypi = "HPI"
# fetch.pypi = "HPI"

# [hug]
# src.pypi = "hug"
# fetch.pypi = "hug"

# [orgparse]
# src.pypi = "orgparse"
# fetch.pypi = "orgparse"

# [open-in-editor]
# src.git = "https://github.com/karlicoss/open-in-editor"
# fetch.git = "https://github.com/karlicoss/open-in-editor"

### :END: promnesia
[python-pass]
# NOTE: https://github.com/aviau/python-pass/pull/34
src.manual = "6f51145a3bc12ee79d2881204b88a82d149f3228"
fetch.github = "aviau/python-pass"

[iterable-io]
src.pypi = "iterable-io"
fetch.pypi = "iterable-io"

[logseq]
# A privacy-first, open-source platform for knowledge management and collaboration
src.github = "logseq/logseq"
fetch.url = "https://github.com/logseq/logseq/releases/download/$ver/logseq-linux-x64-$ver.AppImage"

###################
# hardware crypto stuff
[paper-store]
# A bash script for cold storing small files on paper.
# Store your PGP keys, Bitcoin wallet keys, Tox profile keys, etc. on paper.
src.git = "https://github.com/nurupo/paper-store"
fetch.git = "https://github.com/nurupo/paper-store"

# [pbkdf2-sha512]
# src.git = "https://github.com/NixOS/nixpkgs"
# fetch.url = "https://raw.githubusercontent.com/NixOS/nixpkgs/master/nixos/modules/system/boot/pbkdf2-sha512.c"

[pam_usb]
# pam_usb provides hardware authentication for Linux using ordinary removable media
src.git = "https://github.com/mcdope/pam_usb"
fetch.git = "https://github.com/mcdope/pam_usb"

[pgp-key-generation]
# Deterministic GPG key generator
src.git = "https://github.com/summitto/pgp-key-generation"
fetch.github = "summitto/pgp-key-generation"

[pgp-packet-library]
# Dependency of pgp-key-generation
src.git = "https://github.com/summitto/pgp-packet-library"
fetch.github = "summitto/pgp-packet-library"
git.fetchSubmodules = true

# [trezor-agent]
# #  Hardware-based SSH/GPG/age agent
# src.github_tag = "romanz/trezor-agent"
# src.use_latest_tag = true
# # src.manual = "v0.14.5"
# fetch.github = "romanz/trezor-agent"

# [trezor-agent-subkeys]
# # Hardware-based SSH/PGP agent
# src.git = "https://github.com/jrruethe/trezor-agent"
# src.branch = "subkeys"
# fetch.git = "https://github.com/jrruethe/trezor-agent"

# [trezor-gpg-pinentry-tk]
# src.pypi = "trezor-gpg-pinentry-tk"
# fetch.pypi = "trezor-gpg-pinentry-tk"

# [age-plugin-trezor]
# src.git = "https://github.com/romanz/age-plugin-trezor"
# fetch.github = "romanz/age-plugin-trezor"
# passthru = { cargoSha256 = "0000000000000000000000000000000000000000000000000000" }

### MISC
[dbus-listen]
src.git = "https://github.com/voobscout/dbus-listen"
fetch.git = "https://github.com/voobscout/dbus-listen"

### GIT stuff
[git-get]
src.git = "https://github.com/grdl/git-get"
fetch.github = "grdl/git-get"
passthru = { vendorHash = "05k6w4knk7fdjm9qm272nlrk47rzjr18g0fp4j57f5ncq26cxr8b" }

[git-remote-ipfs]
src.git = "https://github.com/bqv/git-remote-ipfs"
fetch.github = "bqv/git-remote-ipfs"
passthru = { vendorSha256 = "hkenInaS6PFnu/Z0oz32Y4B4BmM5+l5AB2/K1f/LxqA=" }

[git-pull-request-mirror]
src.git = "https://github.com/google/git-pull-request-mirror"
fetch.github = "google/git-pull-request-mirror"
passthru = { vendorSha256 = "0789v1r6my256pncs0105yji28ifchj6ppfiy8gavglgclq3cgvn" }

[quicklisp]
src.manual = "latest"
fetch.url = "https://beta.quicklisp.org/quicklisp.lisp"

[dbus]
src.git = "https://github.com/death/dbus"
fetch.git = "https://github.com/death/dbus"

[cl-hash-util]
src.git = "https://github.com/orthecreedence/cl-hash-util"
fetch.github = "orthecreedence/cl-hash-util"

[cl-strings]
src.git = "https://github.com/diogoalexandrefranco/cl-strings"
fetch.github = "diogoalexandrefranco/cl-strings"

[cl-shellwords]
src.git = "https://github.com/jorams/cl-shellwords"
fetch.github = "jorams/cl-shellwords"

[listopia]
src.git = "https://github.com/Dimercel/listopia"
fetch.github = "Dimercel/listopia"

[acl-compat]
src.git = "https://git.code.sf.net/p/portableaserve/git"
fetch.git = "https://git.code.sf.net/p/portableaserve/git"

[cl-syslog]
src.git = "https://github.com/lhope/cl-syslog"
fetch.github = "lhope/cl-syslog"

[cl-mount-info]
src.git = "https://codeberg.org/cage/cl-mount-info"
fetch.git = "https://codeberg.org/cage/cl-mount-info"
### :END: lisp overlays stuff
###

# [age-plugin-yubikey]
# src.git = "https://github.com/str4d/age-plugin-yubikey"
# fetch.git = "https://github.com/str4d/age-plugin-yubikey"
# cargo_locks = [ "Cargo.lock" ]
# passthru = { cargoSha256 = "0000000000000000000000000000000000000000000000000000" }
# themes

[sublimeSolarized]
src.github = "braver/Solarized"
fetch.github = "braver/Solarized"

# Office apps
[masterpdfeditor]
src.manual = "5.9.85"
fetch.url = "https://code-industry.net/public/master-pdf-editor-$ver-qt5.x86_64-qt_include.tar.gz"

### crystal-lang
[crystalline]
src.use_latest_release = true
src.github = "elbywan/crystalline"
fetch.github = "elbywan/crystalline"

[zerotierone]
src.use_latest_release = true
src.github = "zerotier/ZeroTierOne"
fetch.url = "https://github.com/zerotier/ZeroTierOne/archive/refs/tags/$ver.tar.gz"

###
# Download assistants
###
[transmissionic]
# Remote for Transmission Daemon
src.github = "6c65726f79/Transmissionic"
fetch.url = "https://github.com/6c65726f79/Transmissionic/releases/download/$ver/Transmissionic-webui-$ver.zip"

[radarr]
src.github = "Radarr/Radarr"
src.use_latest_release = true
src.prefix = "v" # NOTE: remove "v" from $ver
fetch.url = "https://github.com/Radarr/Radarr/releases/download/v$ver/Radarr.master.$ver.linux-core-arm64.tar.gz"

[readarr]
# src.github_tag = "Readarr/Readarr"
# src.branch = "develop"
# src.include_regex = "releases/gcc-10.*"
# src.github = "Readarr/Readarr"
# src.use_latest_release = true
# src.prefix = "v" # NOTE: remove "v" from $ver
src.manual = "0.4.13.2760"
fetch.url = "https://github.com/Readarr/Readarr/releases/download/v$ver/Readarr.develop.$ver.linux-core-arm64.tar.gz"

[sonarr]
src.github = "Sonarr/Sonarr"
src.use_latest_release = true
src.prefix = "v" # NOTE: remove "v" from $ver
fetch.url = "https://github.com/Sonarr/Sonarr/releases/download/v$ver/Sonarr.main.$ver.linux-arm64.tar.gz"
# https://github.com/Sonarr/Sonarr/releases/download/v4.0.14.2939/Sonarr.main.4.0.14.2939.linux-arm64.tar.gz

[lidarr]
src.github = "lidarr/Lidarr"
src.use_latest_release = true
src.prefix = "v" # NOTE: remove "v" from $ver
fetch.url = "https://github.com/lidarr/Lidarr/releases/download/v$ver/Lidarr.master.$ver.linux-core-arm64.tar.gz"
# https://github.com/Lidarr/Lidarr/releases/download/v2.10.3.4602/Lidarr.master.2.10.3.4602.linux-core-arm64.tar.gz

[prowlarr]
src.github = "Prowlarr/Prowlarr"
src.use_latest_release = true
src.prefix = "v" # NOTE: remove "v" from $ver
fetch.url = "https://github.com/Prowlarr/Prowlarr/releases/download/v$ver/Prowlarr.master.$ver.linux-core-arm64.tar.gz"

# TODO: [whisparr]
# src.github = "Whisparr/Whisparr"
# fetch.github = "Whisparr/Whisparr"
