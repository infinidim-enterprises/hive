jobs:
  build_shell:
    runs-on: ${{ matrix.runs-on }}
    steps:
    - name: ⬆ Checkout
      uses: actions/checkout@v4.2.2
    - name: ✓ Install Nix
      uses: cachix/install-nix-action@v30
      with:
        extra_nix_config: 'access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

          experimental-features = nix-command flakes impure-derivations auto-allocate-uids
          cgroups

          system-features = nixos-test benchmark big-parallel kvm recursive-nix

          download-buffer-size = 10485760

          accept-flake-config = true

          '
        nix_path: nixpkgs=channel:nixos-24.11
    - name: ✓ Install cachix action
      uses: cachix/cachix-action@v15
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        cachixArgs: --compression-method xz --compression-level 9 --jobs 4
        extraPullNames: cuda-maintainers, mic92, nix-community, nrdxp
        name: njk
        signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
    - name: Free space
      run: df -h
    - name: Build devshell
      run: nix develop --accept-flake-config --command "menu"
    - if: ${{ failure() }}
      name: ✓ tmate.io session
      uses: mxschmitt/action-tmate@master
      with:
        connect-timeout-seconds: 600
        limit-access-to-actor: true
    strategy:
      matrix:
        include:
        - arch: x86_64-linux
          runs-on: ubuntu-22.04
        - arch: aarch64-linux
          runs-on: ubuntu-22.04-arm
name: devshell [aarch64-linux / x86_64-linux]
'on':
  push: null
  workflow_dispatch: null
